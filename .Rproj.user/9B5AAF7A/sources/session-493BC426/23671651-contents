# bring in packages
pacman::p_load("dplyr", "NicheMapR", "sjPlot", "ggplot2", "kableExtra","flextable", "ggpmisc")

##########
# Environmental variables
##########
O2gas	= 20.95 # % O2 in air
CO2gas = 0.03 # % CO2 in air
N2gas	= 79.02 # % nitrogen in air
SHADE	= 0 # shade level (%)
QSOLR	= 800 # solar radiation, horizontal plane (W/m2)
Z	= 20 # zenith angle of sun (degrees from overhead)
TA = 20 # air temperature at local height (°C)
TGRD = 40 # ground temperature (°C)
TSKY = -5 # sky temperature (°C)
VEL = 1 #  wind speed (m/s)
RH = 30 #  relative humidity (%)


 


##########
# A) Morphological parameters - Geometry individual data
##########
# bring in individual 
morph_geo_data <- read.csv(file = "Submods/Individual/2.raw_data/A_E_Data_files/A_ind_data_Morphology_geometry.csv")

### Lizard silhouette area (As) 
## from Muth 1977. As = [ (Z^3A + Z^2B + ZC + D]/100)Atotal
# Normal(RAZ Angle = 0): A = -2.3148*10^-6; B = -2.1024*10^-3; C = -4.6162*10^-2; D = 30.7316
morph_geo_data$As_norm <-((Z^3*(-2.3148*10^-6) + Z^2*(-2.1024*10^-3) + Z*(-4.6162*10^-2) + 30.7316)/100)*morph_geo_data$Total_SA
# Perpendicular(RAZ Angle = 90): A = -1.0185*10^-5; B = 1.3574*10^-3; C = -9.5589*10^-3; D = 30.7255
morph_geo_data$As_perp <-((Z^3*(-1.0185*10^-5) + Z^2*(1.3574*10^-3) + Z*(-9.5589*10^-3) + 30.7255)/100)*morph_geo_data$Total_SA 

  

###
# 1) Summary: Allometric function surface area (cm2) vs mass (g) - Atotal; Aventral; As_norm; As_perp
###
# Total Surface Area  (Atotal) model
Model_allo_Atotal_Mass <- lm(log10(Total_SA) ~ log10(Mass), data = morph_geo_data)
Model_Coeff_Atotal<- as.data.frame(Model_allo_Atotal_Mass$coefficients)
Atotal_a <- 10^(Model_Coeff_Atotal[1,1])
Atotal_b <- Model_Coeff_Atotal[2,1]

# Ventral Surface Area (Aventral) model
Model_allo_Aventral_Mass <- lm(log10(Ventral_SA) ~ log10(Mass), data = morph_geo_data)
Model_Coeff_Aventral<- as.data.frame(Model_allo_Aventral_Mass$coefficients)
Aventral_a <- 10^(Model_Coeff_Aventral[1,1])
Aventral_b <- Model_Coeff_Aventral[2,1]

# Silhouette Area normal (As_norm) model
Model_allo_As_norm_Mass <- lm(log10(As_norm) ~ log10(Mass), data = morph_geo_data)
Model_Coeff_As_norm<- as.data.frame(Model_allo_As_norm_Mass$coefficients)
As_norm_a <- 10^(Model_Coeff_As_norm[1,1])
As_norm_b <- Model_Coeff_As_norm[2,1]

# Silhouette Area perpendicular (As_perp) model
Model_allo_As_perp_Mass <- lm(log10(As_perp) ~ log10(Mass), data = morph_geo_data)
Model_Coeff_As_perp<- as.data.frame(Model_allo_As_perp_Mass$coefficients)
As_perp_a <- 10^(Model_Coeff_As_perp[1,1])
As_perp_b <- Model_Coeff_As_perp[2,1]


# DF for custom shape used in shape = argument
custom_shape <- c(Atotal_a, Atotal_b, 
                  Aventral_a, Aventral_b, 
                  As_norm_a, As_norm_b,
                  As_perp_a, As_perp_b)

###
# 2) Plots: Allometric function total surface area (cm2) vs mass (g)
###
# overall model plot
plot(log10(morph_geo_data$Mass), log10(morph_geo_data$Total_SA))
abline(Model_allo_Atotal_Mass)

# Study (or species) allometric relationship plot 
# add - , color=DB_ID when new species are added
ggplot(morph_geo_data, aes(x=log10(Mass), y=log10(Total_SA), color=DB_ID))  +
  geom_point(size=1, color="grey80") + 
  annotate("point", x=log10(morph_geo_data$Mass[morph_geo_data$DB_ID == "DB_ID"]),
           y=log10(morph_geo_data$Total_SA[morph_geo_data$DB_ID == "DB_ID"]), 
           color="black", size=2, alpha=0.6) + 
  annotate("point", x=log10(morph_geo_data$Mass[morph_geo_data$DB_ID == "DB_ID"]),
           y=log10(morph_geo_data$Total_SA[morph_geo_data$DB_ID == "DB_ID"]), 
           color="white", size=1) + 
  geom_smooth(method="lm", se=F) +
  theme_bw() + 
  theme(panel.grid.minor = element_blank()) + 
  ylab(expression("Surface Area"~(~cm^{"2"})))+
  xlab(expression("Mass (g)"))+
  annotation_logticks(sides="lb") + 
  theme(panel.grid.major=element_blank(), 
        panel.border=element_blank())+ 
  theme(axis.line = element_line())

###
# 2) Table: Geometry
###
# Spp
Tbl_Morph_Geo_Spp <- morph_geo_data %>% 
  group_by(Species) %>% 
  summarise(n = n_distinct(Individual_ID),
            Mass_mean = mean(Mass),
            Mass_unit = unique(Mass_unit),
            Total_SA_mean = mean(Total_SA),
            Total_SA_unit = unique(Total_SA_unit),
            Ventral_SA_mean = mean(Ventral_SA),
            Ventral_SA_unit = unique(Ventral_SA_unit),
            Dorsal_SA_mean = mean(Dorsal_SA),
            Dorsal_SA_unit = unique(Dorsal_SA_unit),
            Cond_SA_SA_mean = mean(Cond_SA),
            Cond_SA_unit = unique(Cond_SA_unit),
            height_above_ground_mean = mean(height_above_ground),
            height_above_ground_unit = unique(height_above_ground_unit)) 



##########
# B) Morphological parameters - Radiative properties individual data
##########
morph_radiative_properties <- read.csv(file = "Submods/Individual/2.raw_data/A_E_Data_files/B_ind_data_Morphology_radiative_properties.csv")

###
# 1) Summary: Wavelength vs reflectance by species (Spp) and/or treatment (Trt)
###
# SPP
Summary_Wvlgt_Reflt_Spp <- morph_radiative_properties %>% 
  group_by(Species, as.factor(wave_length_nm))%>% # grouping factor(s): spp, wave_length 
  summarise(Reflt_mean = mean(reflectance),
            Reflt_L = quantile(reflectance, probs = 0.025),
            Reflt_H = quantile(reflectance, probs = 0.975),
            wave_length_nm = unique(wave_length_nm))
# Spp & Trt
Summary_Wvlgt_Reflt_Spp_Trt <- morph_radiative_properties %>% 
  group_by(Species, as.factor(wave_length_nm), # grouping factor(s): spp, wave_length,trt
                        as.factor(Temp)) %>%
  summarise(Reflt_mean = mean(reflectance),
            Reflt_L = quantile(reflectance, probs = 0.025),
            Reflt_H = quantile(reflectance, probs = 0.975),
            wave_length_nm = unique(wave_length_nm), 
            Temp = unique(Temp))


###
# 3) PLOTS: Wavelength vs reflectance
###
# Spp
ggplot(Summary_Wvlgt_Reflt_Spp, aes(x = wave_length_nm, y = Reflt_mean, 
                                    ymin = Reflt_L, ymax= Reflt_H)) +
  scale_x_continuous(breaks = seq(300, 2100, 200))+
  geom_point() +
  geom_path() +
  geom_ribbon(alpha = 0.2) +
  # facet_wrap(~ Species) +
  theme_bw() + 
  theme(aspect.ratio = 0.7)

# Spp and trt plot
ggplot(Summary_Wvlgt_Reflt_Spp_Trt, aes(x = wave_length_nm, y = Reflt_mean, 
                     ymin = Reflt_L, ymax= Reflt_H, 
                     group = as.factor(Temp), color = as.factor(Temp), 
                     fill = as.factor(Temp))) +
  scale_x_continuous(breaks = seq(300, 2100, 200))+
  geom_point() +
  geom_path() +
  geom_ribbon(alpha = 0.2) +
  # facet_wrap(~ Species) +
  theme_bw() + 
  theme(aspect.ratio = 0.7)


###
# 4) Tables: Wavelength vs reflectance range
###
# Spp
Tbl_Wvlgt_Reflt_Spp <- morph_radiative_properties %>% 
  group_by(Species) %>% 
  summarise(n = n_distinct(Individual_ID),
            Refl_mean = mean(reflectance),
            Refl_sd = sd(reflectance),
            Refl_max = max(reflectance),
            Refl_min = min(reflectance)) %>% 
  mutate(alpha = 1-Refl_mean) # adding solar absorbtivity
Tbl_Wvlgt_Reflt_Spp

# Trt & Spp
Tbl_Wvlgt_Reflt_Spp_Trt <- morph_radiative_properties %>% 
  group_by(Species, as.factor(Temp)) %>% 
  summarise(Refl_mean = mean(reflectance),
            Refl_sd = sd(reflectance),
            Refl_max = max(reflectance),
            Refl_min = min(reflectance)) %>% 
  rename(Temperature = "as.factor(Temp)")
Tbl_Wvlgt_Reflt_Spp_Trt

##########
# D) Physiological parameters - permeability individual data
##########
permeability_data <- read.csv(file = "Submods/Individual/2.raw_data/A_E_Data_files/D_ind_data_Physiology_permeability.csv")
?get_p_wet()

###
# 1) Summary: EWL by spp and calculating percent wet
###
EWL_spp <- permeability_data %>% 
  group_by(Species) %>% 
  summarise(EWL_mean = mean(EWL.mean),
            ELW_units = unique(ELW_units),
            TotalBodySA.cm2 = mean(TotalBodySA.mm2_Resp)/100)

EWL_spp$EWL_KG_S <- (EWL_spp$EWL.mean/100000)/3600

###
# 2) Plots: EWL
###

##########
# E) Physiological parameters - Respirometry individual data
##########
# bring in individual 
Resp_data <- read.csv(file = "Submods/Individual/2.raw_data/A_E_Data_files/E_ind_data_Physiology_respirometry.csv")

###
# Functions for VCO2 and VO2 calculations from raw data to ml/g-1/hr-1
###
# v- The volume of air sample for closed system respirometry. This volume excludes the mass of the animal
# time - The duration animal was enclosed within the chamber
# bp	The barometric pressure in kPa at the time the chamber was closed
# t	The temperature of the chamber air in degrees Celsius (note this is converted to Kelvins)
# CO2 
MRCO2 <- function (v, time, bp, t, data) {
  VolCO2 = v * (data$change_CO2)
  k <- t + 273.15 # Convert temperature, t, in degrees C to Kelvin
  CorVolCO2 = (VolCO2 * bp * 273.15)/(101.325 * k)# Corrected volume by temperature and pressure
  mCO2 <- (CorVolCO2)/time # Calculate metabolic rate
  return(list(MR_CO2 = mCO2, CorVolCO2 = CorVolCO2, VolCO2 = VolCO2))
}
# O2 
MRO2 <- function (v, time, bp, t, data) {
  VolO2 = v * (data$change_O2)
  k <- t + 273.15 # Convert temperature, t, in degrees C to Kelvin
  CorVolO2 = (VolO2 * bp * 273.15)/(101.325 * k) # Corrected volume by temperature and pressure
  mO2 <- (CorVolO2)/time # Calculate metabolic rate
  return(list(MR_O2 = mO2, CorVolO2 = CorVolO2, VolO2 = VolO2))
}
### Adding in data from functions
# VCO2 calculation from respirometry data 
CO2_dat<- MRCO2(v = Resp_data$vol_camber_animal, 
                                  time = (Resp_data$time),
                                  bp = Resp_data$bp, 
                                  t = Resp_data$temp, 
                                  data = Resp_data)
# VO2 calculation from respirometry data
O2_dat <- MRO2(v = Resp_data$vol_camber_animal, 
                               time = (Resp_data$time),
                               bp = Resp_data$bp, 
                               t = Resp_data$temp, 
                               data = Resp_data)

Resp_data_final <- cbind(Resp_data, O2_dat, CO2_dat)

###
# 1) Summary: Allometric function metabolism (O2) vs mass (g); Calculating RQ; Calculating FeO2
###
# allometric function metabolism (O2) vs mass (g)
Model_allo_RespO2_Mass <- lm(log10(MR_O2) ~ log10(mass_out), data = Resp_data_final)
Model_Coeff_RespO2<- as.data.frame(Model_allo_RespO2_Mass$coefficients)
RespO2_a <- 10^(Model_Coeff_RespO2[1,1])
RespO2_b <- Model_Coeff_RespO2[2,1]

# RQ calculation from VCO2/VO2
Resp_data_final <- Resp_data_final %>% 
  mutate(RQ = MR_CO2/MR_O2)

# Appendix D - Kearny & Porter 2004  
# Ventelation rate : V is ventilation rate in mL/h and M is the metabolic rate in mL O2/h.
Resp_data <- Resp_data %>% 
  mutate(vent_rate = (MR_O2*60)/(0.2094*2.509799))
plot(Resp_data$mass_out, Resp_data$vent_rate)


M = 300
Vl <-1.237*M^.75
Vt <- 0.02*M^.8
Vd <- Vt*.5
Va <- Vt - Vd


d <- ectoR_devel(Ww_g = 10, # mean of our morph data set 130g
                 alpha = Tbl_Wvlgt_Reflt_Spp$alpha, 
                 shape = 5, custom_shape = custom_shape,
                 TA = 33)

###
# 2) Plots: 02 vs mass
###
# by study
ggplot(Resp_data, aes(x=log10(mass_out), y=log10(MR_O2), color=DB_ID))  +
  geom_point(size=1, color="grey80")+
  annotate("point", x=log10(Resp_data$mass_out[Resp_data$DB_ID == "DB_ID"]),
           y=log10(Resp_data$MR_O2[Resp_data$DB_ID == "DB_ID"]), 
           color="black", size=2, alpha=0.6) + 
  annotate("point", x=log10(Resp_data$mass_out[Resp_data$DB_ID == "DB_ID"]),
           y=log10(Resp_data$MR_O2[Resp_data$DB_ID == "DB_ID"]), 
           color="white", size=1) + theme_bw() + 
  theme(panel.grid.minor = element_blank()) + 
  ylab(expression("VO2"~(~cm^{"3"}~O[2]~hr^{"-1"})))+
  xlab("mass (g)")+
  annotation_logticks(sides="lb") + 
  theme(panel.grid.major=element_blank(), 
        panel.border=element_blank())+ 
  theme(axis.line = element_line())

  



###
# calculations: get % wet
###
?get_p_wet









# Respiratory Water Loss = (Oxygen Consumed / RQ) - (Oxygen Consumed / RQ * FEO2) 
Resp_data <- Resp_data %>% 
  mutate(FEO2 = abs(((O2_baseline - channel_O2)/O2_baseline)*100),
    RWL_ml_hr = abs((MR_O2 / RQ) - (MR_O2 / RQ * FEO2)))


plot(abs(Resp_data$TWL), Resp_data$RWL_ml_hr)



         