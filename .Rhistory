facet_grid(~ Season, labeller = as_labeller(c("Spring" = "Spring",
"Summer" = "Summer",
"Autumn" = "Autumn",
"Winter" = "Winter"))) +
coord_cartesian(xlim = c(5, 21)) +
scale_fill_manual(values = custom_colors) +
scale_color_manual(values = custom_colors) +
geom_line(data = Male.Tb, aes(HR, Tb), size = 0.3) +
geom_point(data = Male.Tb, aes(HR, Tb),
fill = "white", color = "steelblue",
size = 2.2, shape = 21) +
geom_point(data = Male.Activity, aes(HR, Movement.HR),
fill = "steelblue", color = "black",
size = 2, shape = 17) +
theme_bw() +
theme(legend.position = c(0.85, 0.85), # Adjust the legend position as needed
legend.background = element_rect(fill = alpha('white', 0)), # Fully transparent legend background
legend.box = "vertical", # Arrange legend in vertical boxes
legend.box.spacing = unit(0.5, "cm"), # Space between legend boxes
legend.title = element_text(size = 12, face = "bold"), # Customize legend title
legend.text = element_text(size = 10), # Customize legend text size
strip.background = element_blank(), # Remove gray boxes from facets
strip.text.x = element_text(size = 12, face = "bold"), # Customize facet labels
plot.title = element_blank(), # Remove the plot title
panel.grid.major = element_blank(), # Remove major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
panel.background = element_blank(), # Remove panel background
panel.border = element_rect(color = "black", fill = NA))+ # Keep panel border
guides(fill = guide_legend(ncol = 2),
color = guide_legend(ncol = 2))
# female
Female.Tb <- Tb.predict.dat%>% filter(Sex != "ZZm") %>%
group_by(Date, Hour) %>%
ungroup() %>%
group_by(Hour, Season, Sex) %>%
summarise(Tb = mean(Tb),
HR = unique(HR))
Female.Tb$Season <- factor(Female.Tb$Season, c("Spring", "Summer", "Autumn", "Winter"))
# activity data
Female.Activity <- mydata.final.mm %>% filter(Sex != "ZZm")
Female.Activity$Season <- factor(Female.Activity$Season, c("Spring", "Summer", "Autumn", "Winter"))
female.tb.te.act.fig <- ggplot() +
geom_point(data = Te.data.fig, aes(HR, Te, fill = Type, color = Type)) +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Activity (min/hr)")) +
geom_line(data = Female.Activity, aes(HR, Movement.HR), size = 0.3) +
geom_hline(yintercept = 32.03080, linetype = "dashed", color = "grey34") +
geom_hline(yintercept = 25.33080, linetype = "dashed", color = "grey34") +
labs(x = 'Time of day (h)', y = "Temperature (Â°C)", fill = "Habitat", color = "Habitat") +
facet_grid(~ Season, labeller = as_labeller(c("Spring" = "Spring",
"Summer" = "Summer",
"Autumn" = "Autumn",
"Winter" = "Winter"))) +
coord_cartesian(xlim = c(5, 21)) +
scale_fill_manual(values = custom_colors) +
scale_color_manual(values = custom_colors) +
geom_line(data = Female.Tb, aes(HR, Tb), size = 0.3) +
geom_point(data = Female.Tb, aes(HR, Tb),
fill = "white", color = "darkred",
size = 2.2, shape = 21) +
geom_point(data = Female.Activity, aes(HR, Movement.HR),
fill = "black", color = "black",
size = 2, shape = 17) +
theme_bw() +
theme(legend.position = c(0.85, 0.85), # Adjust the legend position as needed
legend.background = element_rect(fill = alpha('white', 0)), # Fully transparent legend background
legend.box = "vertical", # Arrange legend in vertical boxes
legend.box.spacing = unit(0.5, "cm"), # Space between legend boxes
legend.title = element_text(size = 12, face = "bold"), # Customize legend title
legend.text = element_text(size = 10), # Customize legend text size
strip.background = element_blank(), # Remove gray boxes from facets
strip.text.x = element_text(size = 12, face = "bold"), # Customize facet labels
plot.title = element_blank(), # Remove the plot title
panel.grid.major = element_blank(), # Remove major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
panel.background = element_blank(), # Remove panel background
panel.border = element_rect(color = "black", fill = NA))+ # Keep panel border
guides(fill = guide_legend(ncol = 2),
color = guide_legend(ncol = 2))
#############
# Fig4 Final: Tb, Te, Activity
Fig.4.Tb.Te.Activity.fig<- ggpubr::ggarrange(male.tb.te.act.fig, female.tb.te.act.fig,
font.label = (size = 10),
hjust = - 0.7,
vjust = 2.0 ,
labels = c( "A-Male", "B-Female"),
ncol = 1, nrow = 2)
#save this figure in the correct folder and bring in to knit
knitr::include_graphics("./Final.Analysis/Final.Figures/Figure4_Activity_Tbs.pdf")
#save this figure in the correct folder and bring in to knit
knitr::include_graphics("./Final.Analysis/Final.Figures/Figure4_Activity_Tbs.pdf")
#save this figure in the correct folder and bring in to knit
knitr::include_graphics("./Final.Analysis/Final.Figures/Figure4_Activity_Tbs.pdf")
```
# Step 2: grab fit from the GAM Model
gam_model <- readRDS(file = "Models/Season.Sex.Interaction.Povi.rds")
gam_model_data <- plot_smooths(Season.Sex.Interaction.Povi, temp, Sex, facet_terms = Season)
gam_model_data <- as.data.frame(gam_model_data$data)
# SPRING
Spring <- gam_model_data %>% filter(Season == "Spring")
Spring.plot <- ggplot() +
geom_point(data = your_data %>%
filter(Season == "Spring"),
aes(x = temp, y = percent95.ms2, shape = Sex, color = Sex), size = 2) +
scale_shape_manual(values = c(17, 21)) +
scale_color_manual(values = c( 'darkred', "steelblue"), labels = c("Female", "Male")) +
scale_fill_manual(values = c('darkred', "steelblue")) +  # Ensure fill colors for the ribbon
ylab(bquote("95th"~"percentile"~"of"~"acceleration ms"^-2)) +
xlab(expression(T[b~Predict])) +
coord_cartesian(xlim = c(10, 50), ylim = c(0.06, 1.8)) +
scale_x_continuous(breaks = seq(10, 50, 5)) +
scale_y_continuous(breaks = seq(0, 1.8, .2)) +
geom_ribbon(data = Spring, aes(x = temp, ymin = CI_lower,
ymax = CI_upper, fill = Sex), alpha = 0.2) +
geom_line(data = Spring, aes(x = temp, y = percent95.ms2, color = Sex), size = 1) +
theme_bw() +
ggtitle("Spring") +
theme(legend.position = "none",
text = element_text(size = 16),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank())
###### Summer
Summer <- gam_model_data %>% filter(Season == "Summer")
Summer.plot <- ggplot() +
geom_point(data = your_data %>% filter(Season == "Summer"), aes(x = temp, y = percent95.ms2, shape = Sex, color = Sex), size = 2) +
scale_shape_manual(values = c(17, 21)) +
scale_color_manual(values = c( 'darkred', "steelblue"), labels = c("Female", "Male")) +
scale_fill_manual(values = c('darkred', "steelblue")) +
ylab(NULL) +  # Remove Y-axis label
xlab(expression(T[b~Predict])) +
coord_cartesian(xlim = c(10, 50), ylim = c(0.06, 1.8)) +
scale_x_continuous(breaks = seq(10, 50, 5)) +
scale_y_continuous(breaks = seq(0, 1.8, .2)) +
geom_ribbon(data = Summer, aes(x = temp, ymin = CI_lower,
ymax = CI_upper, fill = Sex), alpha = 0.2) +
geom_line(data = Summer, aes(x = temp, y = percent95.ms2, color = Sex), size = 1)+
theme_bw() +
ggtitle("Summer") +
theme(legend.position = "none",
text = element_text(size = 16),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank())
###### Autumn
Autumn <- gam_model_data %>% filter(Season == "Autumn")
Autumn.plot <- ggplot() +
geom_point(data = your_data %>% filter(Season == "Autumn"),
aes(x = temp, y = percent95.ms2, shape = Sex, color = Sex), size = 2) +
scale_shape_manual(values = c(17, 21)) +
scale_color_manual(values = c( "darkred", "steelblue"), labels = c("Female", "Male")) +
scale_fill_manual(values = c('darkred', "steelblue")) +
xlab(expression(T[b~Predict])) +
ylab(NULL) +  # Remove Y-axis label
coord_cartesian(xlim = c(10, 50), ylim = c(0.06, 1.8)) +
scale_x_continuous(breaks = seq(10, 50, 5)) +
scale_y_continuous(breaks = seq(0, 1.8, .2)) +
geom_ribbon(data = Autumn, aes(x = temp, ymin = CI_lower,
ymax = CI_upper, fill = Sex), alpha = 0.2) +
geom_line(data = Autumn, aes(x = temp, y = percent95.ms2, color = Sex), size = 1)+
theme_bw() +
ggtitle("Autumn") +
theme(legend.position = "none",
text = element_text(size = 16),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank())   # Remove minor grid lines
###### Winter
Winter <- gam_model_data %>%filter(Season == "Winter")
Winter.plot <- ggplot() +
geom_point(data = your_data %>% filter(Season == "Winter"),
aes(x = temp, y = percent95.ms2, shape = Sex, color = Sex), size = 2) +
scale_shape_manual(values = c(17, 21), labels = c("Female", "Male")) +
scale_color_manual(values = c( 'darkred', "steelblue"), labels = c("Female", "Male")) +
scale_fill_manual(values = c('darkred', "steelblue")) +
ylab(NULL) +  # Remove Y-axis label
xlab(expression(T[b~Predict])) +
coord_cartesian(xlim = c(10, 50), ylim = c(0.06, 1.8)) +
scale_x_continuous(breaks = seq(10, 50, 5)) +
scale_y_continuous(breaks = seq(0, 1.8, .2)) +
geom_ribbon(data = Winter, aes(x = temp, ymin = CI_lower,
ymax = CI_upper, fill = Sex), alpha = 0.2) +
geom_line(data = Winter, aes(x = temp, y = percent95.ms2, color = Sex), size = 1)+
theme_bw() +
ggtitle("Winter") +
theme(
text = element_text(size = 16),
legend.position = c(0.94, 0.98),  # Position legend inside the plot area
legend.justification = c(1, 1),  # Adjust legend justification
legend.background = element_rect(fill = "transparent", color = NA),  # Make legend background transparent
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank())+   # Remove minor grid lines
guides(shape = guide_legend(title = "Sex"),
color = guide_legend(title = "Sex"),
fill = "none")  # Remove the fill legend
Figure_5_TPC<- cowplot::plot_grid(Spring.plot, Summer.plot, Autumn.plot, Winter.plot, ncol=4)
############################################################
#####  #####  #####  #####  #####  #####  #####  #####  #####
#####  #####  #####  SURIVAL #####  #####  #####  #####  #####
# MARK OUTPUT
setwd('~/Dropbox/RWorkingDirectory/TPC_Survival/R')
dat <- read.csv(file = "Final.Analysis/Final.Figure.data/MARK_Outputs/Sex_Topt_survival.csv") %>%
rename(Survival = Survial)
Figure_6_survival <- ggplot(dat, aes(x = Pmax * 100, # back transform because MARK makes you put parameters in 0-1
y = Survival, color = Sex, linetype = Sex)) +
geom_line(size = 1) +
geom_ribbon(aes(ymin = Survival - SE, ymax = Survival + SE, fill = Sex), alpha = 0.2) +
scale_fill_manual(values = c("darkred", "steelblue")) +  # Different shades of grey for ribbon fill
scale_linetype_manual(values = c("solid", "longdash")) +
scale_color_manual(values = c("grey60", "black")) +
labs(x = expression(95^th ~ percentile ~ of ~ acceleration ~ (ms^{-2})), y = "Survival") +
theme_bw() +
theme(
text = element_text(size = 18),  # Set text size
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white", colour = NA),
legend.position = c(0.90, 0.90),
legend.background = element_rect(fill = "transparent")
)
Figure_2_final
Fig.3.E.index.fig
Fig.4.Tb.Te.Activity.fig
Figure_5_TPC
Figure_6_survival
Fig.4.Tb.Te.Activity.fig
Figure_5_TPC
Figure_2_final
Fig.3.E.index.fig
Figure_2_final
male.tb.te.act.fig <- ggplot() +
geom_point(data = Te.data.fig, aes(HR, Te, fill = Type, color = Type)) +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Activity (min/hr)")) +
geom_line(data = Male.Activity, aes(HR, Movement.HR), size = 0.3) +
geom_hline(yintercept = 32.03080, linetype = "dashed", color = "grey34") +
geom_hline(yintercept = 25.33080, linetype = "dashed", color = "grey34") +
labs(x = NULL, y = "Temperature (Â°C)", fill = "Habitat", color = "Habitat") +
facet_grid(~ Season, labeller = as_labeller(c("Spring" = "Spring",
"Summer" = "Summer",
"Autumn" = "Autumn",
"Winter" = "Winter"))) +
coord_cartesian(xlim = c(5, 21)) +
scale_fill_manual(values = custom_colors) +
scale_color_manual(values = custom_colors) +
geom_line(data = Male.Tb, aes(HR, Tb), size = 0.3) +
geom_point(data = Male.Tb, aes(HR, Tb),
fill = "white", color = "steelblue",
size = 2.2, shape = 21) +
geom_point(data = Male.Activity, aes(HR, Movement.HR),
fill = "steelblue", color = "black",
size = 2, shape = 17) +
theme_bw() +
theme(legend.position = c(0.85, 0.85), # Adjust the legend position as needed
legend.background = element_rect(fill = alpha('white', 0)), # Fully transparent legend background
legend.box = "vertical", # Arrange legend in vertical boxes
legend.box.spacing = unit(0.5, "cm"), # Space between legend boxes
text = element_text(size = 16),
legend.title = element_text(size = 12, face = "bold"), # Customize legend title
legend.text = element_text(size = 10), # Customize legend text size
strip.background = element_blank(), # Remove gray boxes from facets
strip.text.x = element_text(size = 12, face = "bold"), # Customize facet labels
plot.title = element_blank(), # Remove the plot title
panel.grid.major = element_blank(), # Remove major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
panel.background = element_blank(), # Remove panel background
panel.border = element_rect(color = "black", fill = NA))+ # Keep panel border
guides(fill = guide_legend(ncol = 2),
color = guide_legend(ncol = 2))
# female
Female.Tb <- Tb.predict.dat%>% filter(Sex != "ZZm") %>%
group_by(Date, Hour) %>%
ungroup() %>%
group_by(Hour, Season, Sex) %>%
summarise(Tb = mean(Tb),
HR = unique(HR))
Female.Tb$Season <- factor(Female.Tb$Season, c("Spring", "Summer", "Autumn", "Winter"))
# activity data
Female.Activity <- mydata.final.mm %>% filter(Sex != "ZZm")
Female.Activity$Season <- factor(Female.Activity$Season, c("Spring", "Summer", "Autumn", "Winter"))
female.tb.te.act.fig <- ggplot() +
geom_point(data = Te.data.fig, aes(HR, Te, fill = Type, color = Type)) +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Activity (min/hr)")) +
geom_line(data = Female.Activity, aes(HR, Movement.HR), size = 0.3) +
geom_hline(yintercept = 32.03080, linetype = "dashed", color = "grey34") +
geom_hline(yintercept = 25.33080, linetype = "dashed", color = "grey34") +
labs(x = 'Time of day (h)', y = "Temperature (Â°C)", fill = "Habitat", color = "Habitat") +
facet_grid(~ Season, labeller = as_labeller(c("Spring" = "Spring",
"Summer" = "Summer",
"Autumn" = "Autumn",
"Winter" = "Winter"))) +
coord_cartesian(xlim = c(5, 21)) +
scale_fill_manual(values = custom_colors) +
scale_color_manual(values = custom_colors) +
geom_line(data = Female.Tb, aes(HR, Tb), size = 0.3) +
geom_point(data = Female.Tb, aes(HR, Tb),
fill = "white", color = "darkred",
size = 2.2, shape = 21) +
geom_point(data = Female.Activity, aes(HR, Movement.HR),
fill = "black", color = "black",
size = 2, shape = 17) +
theme_bw() +
theme(legend.position = c(0.85, 0.85), # Adjust the legend position as needed
legend.background = element_rect(fill = alpha('white', 0)), # Fully transparent legend background
legend.box = "vertical", # Arrange legend in vertical boxes
legend.box.spacing = unit(0.5, "cm"), # Space between legend boxes
legend.title = element_text(size = 12, face = "bold"), # Customize legend title
legend.text = element_text(size = 10), # Customize legend text size
strip.background = element_blank(), # Remove gray boxes from facets
strip.text.x = element_text(size = 12, face = "bold"), # Customize facet labels
plot.title = element_blank(), # Remove the plot title
panel.grid.major = element_blank(), # Remove major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
panel.background = element_blank(), # Remove panel background
panel.border = element_rect(color = "black", fill = NA))+ # Keep panel border
guides(fill = guide_legend(ncol = 2),
color = guide_legend(ncol = 2))
#############
# Fig4 Final: Tb, Te, Activity
Fig.4.Tb.Te.Activity.fig<- ggpubr::ggarrange(male.tb.te.act.fig, female.tb.te.act.fig,
font.label = (size = 10),
hjust = - 0.7,
vjust = 2.0 ,
labels = c( "A-Male", "B-Female"),
ncol = 1, nrow = 2)
Fig.4.Tb.Te.Activity.fig
male.tb.te.act.fig <- ggplot() +
geom_point(data = Te.data.fig, aes(HR, Te, fill = Type, color = Type)) +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Activity (min/hr)")) +
geom_line(data = Male.Activity, aes(HR, Movement.HR), size = 0.3) +
geom_hline(yintercept = 32.03080, linetype = "dashed", color = "grey34") +
geom_hline(yintercept = 25.33080, linetype = "dashed", color = "grey34") +
labs(x = NULL, y = "Temperature (Â°C)", fill = "Habitat", color = "Habitat") +
facet_grid(~ Season, labeller = as_labeller(c("Spring" = "Spring",
"Summer" = "Summer",
"Autumn" = "Autumn",
"Winter" = "Winter"))) +
coord_cartesian(xlim = c(5, 21)) +
scale_fill_manual(values = custom_colors) +
scale_color_manual(values = custom_colors) +
geom_line(data = Male.Tb, aes(HR, Tb), size = 0.3) +
geom_point(data = Male.Tb, aes(HR, Tb),
fill = "white", color = "steelblue",
size = 2.2, shape = 21) +
geom_point(data = Male.Activity, aes(HR, Movement.HR),
fill = "steelblue", color = "black",
size = 2, shape = 17) +
theme_bw() +
theme(legend.position = c(0.85, 0.85), # Adjust the legend position as needed
legend.background = element_rect(fill = alpha('white', 0)), # Fully transparent legend background
legend.box = "vertical", # Arrange legend in vertical boxes
legend.box.spacing = unit(0.5, "cm"), # Space between legend boxes
text = element_text(size = 16),
legend.title = element_text(size = 14, face = "bold"), # Customize legend title
legend.text = element_text(size = 12), # Customize legend text size
strip.background = element_blank(), # Remove gray boxes from facets
strip.text.x = element_text(size = 16, face = "bold"), # Customize facet labels
plot.title = element_blank(), # Remove the plot title
panel.grid.major = element_blank(), # Remove major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
panel.background = element_blank(), # Remove panel background
panel.border = element_rect(color = "black", fill = NA))+ # Keep panel border
guides(fill = guide_legend(ncol = 2),
color = guide_legend(ncol = 2))
# female
Female.Tb <- Tb.predict.dat%>% filter(Sex != "ZZm") %>%
group_by(Date, Hour) %>%
ungroup() %>%
group_by(Hour, Season, Sex) %>%
summarise(Tb = mean(Tb),
HR = unique(HR))
Female.Tb$Season <- factor(Female.Tb$Season, c("Spring", "Summer", "Autumn", "Winter"))
# activity data
Female.Activity <- mydata.final.mm %>% filter(Sex != "ZZm")
Female.Activity$Season <- factor(Female.Activity$Season, c("Spring", "Summer", "Autumn", "Winter"))
female.tb.te.act.fig <- ggplot() +
geom_point(data = Te.data.fig, aes(HR, Te, fill = Type, color = Type)) +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Activity (min/hr)")) +
geom_line(data = Female.Activity, aes(HR, Movement.HR), size = 0.3) +
geom_hline(yintercept = 32.03080, linetype = "dashed", color = "grey34") +
geom_hline(yintercept = 25.33080, linetype = "dashed", color = "grey34") +
labs(x = 'Time of day (h)', y = "Temperature (Â°C)", fill = "Habitat", color = "Habitat") +
facet_grid(~ Season, labeller = as_labeller(c("Spring" = "Spring",
"Summer" = "Summer",
"Autumn" = "Autumn",
"Winter" = "Winter"))) +
coord_cartesian(xlim = c(5, 21)) +
scale_fill_manual(values = custom_colors) +
scale_color_manual(values = custom_colors) +
geom_line(data = Female.Tb, aes(HR, Tb), size = 0.3) +
geom_point(data = Female.Tb, aes(HR, Tb),
fill = "white", color = "darkred",
size = 2.2, shape = 21) +
geom_point(data = Female.Activity, aes(HR, Movement.HR),
fill = "black", color = "black",
size = 2, shape = 17) +
theme_bw() +
theme(legend.position = c(0.85, 0.85), # Adjust the legend position as needed
legend.background = element_rect(fill = alpha('white', 0)), # Fully transparent legend background
legend.box = "vertical", # Arrange legend in vertical boxes
legend.box.spacing = unit(0.5, "cm"), # Space between legend boxes
text = element_text(size = 16),
legend.title = element_text(size = 14, face = "bold"), # Customize legend title
legend.text = element_text(size = 12), # Customize legend text size
strip.background = element_blank(), # Remove gray boxes from facets
strip.text.x = element_text(size = 14, face = "bold"), # Customize facet labels
plot.title = element_blank(), # Remove the plot title
panel.grid.major = element_blank(), # Remove major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
panel.background = element_blank(), # Remove panel background
panel.border = element_rect(color = "black", fill = NA))+ # Keep panel border
guides(fill = guide_legend(ncol = 2),
color = guide_legend(ncol = 2))
#############
# Fig4 Final: Tb, Te, Activity
Fig.4.Tb.Te.Activity.fig<- ggpubr::ggarrange(male.tb.te.act.fig, female.tb.te.act.fig,
font.label = (size = 10),
hjust = - 0.7,
vjust = 2.0 ,
labels = c( "A-Male", "B-Female"),
ncol = 1, nrow = 2)
Fig.4.Tb.Te.Activity.fig
#############
# Fig4 Final: Tb, Te, Activity
Fig.4.Tb.Te.Activity.fig<- ggpubr::ggarrange(male.tb.te.act.fig, female.tb.te.act.fig,
font.label = (size = 14),
hjust = - 0.7,
vjust = 2.0 ,
labels = c( "A-Male", "B-Female"),
ncol = 1, nrow = 2)
Fig.4.Tb.Te.Activity.fig
#############
# Fig4 Final: Tb, Te, Activity
Fig.4.Tb.Te.Activity.fig<- ggpubr::ggarrange(male.tb.te.act.fig, female.tb.te.act.fig,
font.label = (size = 16),
hjust = - 0.7,
vjust = 2.0 ,
labels = c( "A-Male", "B-Female"),
ncol = 1, nrow = 2)
Fig.4.Tb.Te.Activity.fig
ggpubr::ggarrange(male.tb.te.act.fig, female.tb.te.act.fig,
font.label = (size = 16),
hjust = - 0.7,
vjust = 2.0 ,
labels = c( "A-Male", "B-Female"),
ncol = 1, nrow = 2)
#############
# Fig4 Final: Tb, Te, Activity
Fig.4.Tb.Te.Activity.fig<- ggpubr::ggarrange(male.tb.te.act.fig, female.tb.te.act.fig,
font.label = (size = 32),
hjust = - 0.7,
vjust = 2.0 ,
labels = c( "A-Male", "B-Female"),
ncol = 1, nrow = 2)
Fig.4.Tb.Te.Activity.fig
Fig.4.Tb.Te.Activity.fig
Figure_5_TPC
Fig.4.Tb.Te.Activity.fig
Figure_6_survival
Figure_2_final
Fig.3.E.index.fig
Fig.4.Tb.Te.Activity.fig
Figure_5_TPC
Figure_2_final
Fig.3.E.index.fig
Fig.4.Tb.Te.Activity.fig
female.tb.te.act.fig <- ggplot() +
geom_point(data = Te.data.fig, aes(HR, Te, fill = Type, color = Type)) +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Activity (min/hr)")) +
geom_line(data = Female.Activity, aes(HR, Movement.HR), size = 0.3) +
geom_hline(yintercept = 32.03080, linetype = "dashed", color = "grey34") +
geom_hline(yintercept = 25.33080, linetype = "dashed", color = "grey34") +
labs(x = 'Time of day (h)', y = "Temperature (Â°C)", fill = "Habitat", color = "Habitat") +
facet_grid(~ Season, labeller = as_labeller(c("Spring" = "Spring",
"Summer" = "Summer",
"Autumn" = "Autumn",
"Winter" = "Winter"))) +
coord_cartesian(xlim = c(5, 21)) +
scale_fill_manual(values = custom_colors) +
scale_color_manual(values = custom_colors) +
geom_line(data = Female.Tb, aes(HR, Tb), size = 0.3) +
geom_point(data = Female.Tb, aes(HR, Tb),
fill = "white", color = "darkred",
size = 2.2, shape = 21) +
geom_point(data = Female.Activity, aes(HR, Movement.HR),
fill = "black", color = "black",
size = 2, shape = 17) +
theme_bw() +
theme(legend.position = c(0.85, 0.85), # Adjust the legend position as needed
legend.background = element_rect(fill = alpha('white', 0)), # Fully transparent legend background
legend.box = "vertical", # Arrange legend in vertical boxes
legend.box.spacing = unit(0.5, "cm"), # Space between legend boxes
text = element_text(size = 16),
legend.title = element_text(size = 14, face = "bold"), # Customize legend title
legend.text = element_text(size = 12), # Customize legend text size
strip.background = element_blank(), # Remove gray boxes from facets
strip.text.x = element_text(size = 16, face = "bold"), # Customize facet labels
plot.title = element_blank(), # Remove the plot title
panel.grid.major = element_blank(), # Remove major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
panel.background = element_blank(), # Remove panel background
panel.border = element_rect(color = "black", fill = NA))+ # Keep panel border
guides(fill = guide_legend(ncol = 2),
color = guide_legend(ncol = 2))
#############
# Fig4 Final: Tb, Te, Activity
Fig.4.Tb.Te.Activity.fig<- ggpubr::ggarrange(male.tb.te.act.fig, female.tb.te.act.fig,
font.label = (size = 32),
hjust = - 0.7,
vjust = 2.0 ,
labels = c( "A-Male", "B-Female"),
ncol = 1, nrow = 2)
Fig.4.Tb.Te.Activity.fig
