Fig.4.Tb.Te.Activity.fig<- ggpubr::ggarrange(male.tb.te.act.fig, female.tb.te.act.fig,
font.label = (size = 10),
hjust = - 0.7,
vjust = 2.0 ,
labels = c( "A-Male", "B-Female"),
ncol = 1, nrow = 2)
female.tb.te.act.fig <- ggplot() +
geom_point(data = Female.Tb, aes(HR,Tb),
fill = "#999999", color = "black",
size = 2.2, shape = 21)+
geom_point(data = Female.Activity, aes(HR,Movement.HR),
fill = "black", color = "black",
size = 2, shape = 17)+
geom_point(data = Te.data.fig, aes(HR,Te, fill = Type, color = Type)) +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Activity (min/hr)"))+
geom_line(data = Female.Tb, aes(HR,Tb), size = 0.3)+
geom_line(data = Female.Activity, aes(HR,Movement.HR), size = 0.3)+
geom_hline(yintercept=33.80642, linetype="dashed", color = "grey34")+
geom_hline(yintercept=26.97309, linetype="dashed", color = "grey34")+
labs(x = "Time of day (hr)", y = "Temperature (°C) or Activity (min/h)") +
coord_cartesian(xlim = c(5, 21))+
facet_grid(~Season) +
theme_bw()
female.tb.te.act.fig
#############
# Fig4 Final: Tb, Te, Activity
Fig.4.Tb.Te.Activity.fig<- ggpubr::ggarrange(male.tb.te.act.fig, female.tb.te.act.fig,
font.label = (size = 10),
hjust = - 0.7,
vjust = 2.0 ,
labels = c( "A-Male", "B-Female"),
ncol = 1, nrow = 2)
Fig.4.Tb.Te.Activity.fig
##### Fig 4 -Activity, Tb, Te, Tset by hour
Tb.predict.dat <- readRDS(file = "Final.Analysis/Final.Figure.data/Final.Activity.mins.data.RDS") %>% filter(Sex != "ZZf")
Tb.predict.dat$Hour <- as.factor(Tb.predict.dat$HR)
Tb.predict.dat$Type <- gsub("open_tree", "Open_tree", Tb.predict.dat$Type)
Male.Activity
# activity data
mydata.final.mm<- readRDS(file = "Final.Analysis/Final.Figure.data/activity.fig.data.rds")
Male.Activity <- mydata.final.mm %>% filter(Sex != "ZWf")
#############
setwd("~/Dropbox/RWorkingDirectory/TPC_Survival/R")
##### Fig 4 -Activity, Tb, Te, Tset by hour
Tb.predict.dat <- readRDS(file = "Final.Analysis/Final.Figure.data/Final.Activity.mins.data.RDS") %>% filter(Sex != "ZZf")
Tb.predict.dat$Hour <- as.factor(Tb.predict.dat$HR)
Tb.predict.dat$Type <- gsub("open_tree", "Open_tree", Tb.predict.dat$Type)
Tb.predict.dat
##### Fig 4 -Activity, Tb, Te, Tset by hour
Tb.predict.dat <- readRDS(file = "Final.Analysis/Final.Figure.data/Final.Activity.mins.data.RDS") %>% filter(Sex != "ZZf")
Tb.predict.dat$Hour <- as.factor(Tb.predict.dat$HR)
# summary
Male.Tb <- Tb.predict.dat%>% filter(Sex != "ZWf") %>%
group_by(Date, Hour) %>%
ungroup() %>%
group_by(Hour, Season, Sex) %>%
summarise(Tb = mean(Tb),
HR = unique(HR))
Male.Tb$Season <- factor(Male.Tb$Season, c("Spring", "Summer", "Autumn", "Winter"))
# activity data
mydata.final.mm<- readRDS(file = "Final.Analysis/Final.Figure.data/activity.fig.data.rds")
Male.Activity <- mydata.final.mm %>% filter(Sex != "ZWf")
Male.Activity$Season <- factor(Male.Activity$Season, c("Spring", "Summer", "Autumn", "Winter"))
# Te data
Te <- readRDS(file = "Final.Analysis/Final.Figure.data/Te.sex.final.RDS")
Te$Type <- gsub("open_tree", "Open_tree", Te$Type)
Te.data.fig <- Te %>%
group_by(hr, Season, Type) %>%
summarise(Te = mean(Te),
HR = unique(HR))
Te.data.fig$Season <- factor(Te.data.fig$Season, c("Spring", "Summer", "Autumn", "Winter"))
# male plot
male.tb.te.act.fig <- ggplot() +
geom_point(data = Male.Tb, aes(HR,Tb),
fill = "white", color = "black",
size = 2.2, shape = 21)+
geom_point(data = Male.Activity, aes(HR,Movement.HR),
fill = "black", color = "black",
size = 2, shape = 17)+
geom_point(data = Te.data.fig, aes(HR,Te, fill = Type, color = Type)) +
geom_line(data = Male.Tb, aes(HR,Tb), size = 0.3)+
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Activity (min/hr)"))+
geom_line(data = Male.Activity, aes(HR,Movement.HR), size = 0.3)+
geom_hline(yintercept=32.03080, linetype="dashed", color = "grey34")+
geom_hline(yintercept=25.33080, linetype="dashed", color = "grey34")+
labs(x = NULL, y = "Temperature (°C)") +
facet_grid(~Season) +
coord_cartesian(xlim = c(5, 21))+
theme_bw()
# female
Female.Tb <- Tb.predict.dat%>% filter(Sex != "ZZm") %>%
group_by(Date, Hour) %>%
ungroup() %>%
group_by(Hour, Season, Sex) %>%
summarise(Tb = mean(Tb),
HR = unique(HR))
Female.Tb$Season <- factor(Female.Tb$Season, c("Spring", "Summer", "Autumn", "Winter"))
# activity data
Female.Activity <- mydata.final.mm %>% filter(Sex != "ZZm")
Female.Activity$Season <- factor(Female.Activity$Season, c("Spring", "Summer", "Autumn", "Winter"))
female.tb.te.act.fig <- ggplot() +
geom_point(data = Female.Tb, aes(HR,Tb),
fill = "#999999", color = "black",
size = 2.2, shape = 21)+
geom_point(data = Female.Activity, aes(HR,Movement.HR),
fill = "black", color = "black",
size = 2, shape = 17)+
geom_point(data = Te.data.fig, aes(HR,Te, fill = Type, color = Type)) +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Activity (min/hr)"))+
geom_line(data = Female.Tb, aes(HR,Tb), size = 0.3)+
geom_line(data = Female.Activity, aes(HR,Movement.HR), size = 0.3)+
geom_hline(yintercept=33.80642, linetype="dashed", color = "grey34")+
geom_hline(yintercept=26.97309, linetype="dashed", color = "grey34")+
labs(x = "Time of day (hr)", y = "Temperature (°C) or Activity (min/h)") +
coord_cartesian(xlim = c(5, 21))+
facet_grid(~Season) +
theme_bw()
#############
# Fig4 Final: Tb, Te, Activity
Fig.4.Tb.Te.Activity.fig<- ggpubr::ggarrange(male.tb.te.act.fig, female.tb.te.act.fig,
font.label = (size = 10),
hjust = - 0.7,
vjust = 2.0 ,
labels = c( "A-Male", "B-Female"),
ncol = 1, nrow = 2)
Fig.4.Tb.Te.Activity.fig
female.tb.te.act.fig <- ggplot() +
geom_point(data = Female.Tb, aes(HR,Tb),
fill = "#999999", color = "black",
size = 2.2, shape = 21)+
geom_point(data = Female.Activity, aes(HR,Movement.HR),
fill = "black", color = "black",
size = 2, shape = 17)+
geom_point(data = Te.data.fig, aes(HR,Te, fill = Type, color = Type)) +
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Activity (min/hr)"))+
geom_line(data = Female.Tb, aes(HR,Tb), size = 0.3)+
geom_line(data = Female.Activity, aes(HR,Movement.HR), size = 0.3)+
geom_hline(yintercept=33.80642, linetype="dashed", color = "grey34")+
geom_hline(yintercept=26.97309, linetype="dashed", color = "grey34")+
labs(x = "Time of day (hr)", y = "Temperature (°C)") +
coord_cartesian(xlim = c(5, 21))+
facet_grid(~Season) +
theme_bw()
#############
# Fig4 Final: Tb, Te, Activity
Fig.4.Tb.Te.Activity.fig<- ggpubr::ggarrange(male.tb.te.act.fig, female.tb.te.act.fig,
font.label = (size = 10),
hjust = - 0.7,
vjust = 2.0 ,
labels = c( "A-Male", "B-Female"),
ncol = 1, nrow = 2)
Fig.4.Tb.Te.Activity.fig
# male plot
male.tb.te.act.fig <- ggplot() +
geom_point(data = Male.Tb, aes(HR,Tb),
fill = "white", color = "black",
size = 2.2, shape = 21)+
geom_point(data = Male.Activity, aes(HR,Movement.HR),
fill = "black", color = "black",
size = 2, shape = 17)+
geom_point(data = Te.data.fig, aes(HR,Te, fill = Type, color = Type)) +
geom_line(data = Male.Tb, aes(HR,Tb), size = 0.3)+
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Activity (min/hr)"), limits = c(0, 20))+
geom_line(data = Male.Activity, aes(HR,Movement.HR), size = 0.3)+
geom_hline(yintercept=32.03080, linetype="dashed", color = "grey34")+
geom_hline(yintercept=25.33080, linetype="dashed", color = "grey34")+
labs(x = NULL, y = "Temperature (°C)") +
facet_grid(~Season) +
coord_cartesian(xlim = c(5, 21))+
theme_bw()
male.tb.te.act.fig
# male plot
male.tb.te.act.fig <- ggplot() +
geom_point(data = Male.Tb, aes(HR,Tb),
fill = "white", color = "black",
size = 2.2, shape = 21)+
geom_point(data = Male.Activity, aes(HR,Movement.HR),
fill = "black", color = "black",
size = 2, shape = 17)+
geom_point(data = Te.data.fig, aes(HR,Te, fill = Type, color = Type)) +
geom_line(data = Male.Tb, aes(HR,Tb), size = 0.3)+
scale_y_continuous(sec.axis = sec_axis(~ ., name = "Activity (min/hr)"))+
geom_line(data = Male.Activity, aes(HR,Movement.HR), size = 0.3)+
geom_hline(yintercept=32.03080, linetype="dashed", color = "grey34")+
geom_hline(yintercept=25.33080, linetype="dashed", color = "grey34")+
labs(x = NULL, y = "Temperature (°C)") +
facet_grid(~Season) +
coord_cartesian(xlim = c(5, 21))+
theme_bw()
db.sex.all.final <- readRDS(file = "Final.Analysis/Final.Figure.data/db.final.RDS")
Tb.sample.size <- db.sex.all.final %>% ungroup() %>% group_by(Season) %>% summarise(n =n())
Tb.mod <- lmer(Tb  ~ Sex + Season + Season*Sex + (1|POVI), db.sex.all.final)
Tb.mod.sum <- round(as.data.frame(anova(Tb.mod)), digits = 2) %>% mutate("Model Name" = "Tb Predict")
Tb.mod.sum[2,6] <- "<0.01"
Tb.mod.sum[3,6] <- "<0.01"
#######
# db values
#######
# note these data are summarised by inividual, date, by the hour. Season, sex are unique
db.final.mod <- lmer(individual_db ~ Sex + Season + Season*Sex + (1|POVI), db.sex.all.final)
db.anova.sum <- round(as.data.frame(anova(db.final.mod)), digits = 2)%>% mutate("Model Name" = "db")
db.anova.sum[2,6] <- "<0.01"
db.anova.sum[3,6] <- "<0.01"
####################
# de values
####################
#analysis for de by sex and season
Te <- readRDS(file = "Final.Analysis/Final.Figure.data/Te.sex.final.RDS")
definal.mod <- lmer(de ~ Te.Analysis + Season + Te.Analysis*Season + (1|Model_.), Te)
de.anova.sum <- round(as.data.frame(anova(definal.mod)), digits = 2) %>% mutate("Pr(>F)" = "< 0.01", "Model Name" = "de")
####################
# Eindex
####################
E_final_season <- readRDS(file = "Final.Analysis/Final.Figure.data/E_season_sex_individual.RDS")
E.mod <- lmer(indvidual_season_E  ~ Sex + Season + Season*Sex + (1|POVI), E_final_season)
E.mod.Sum <- round(as.data.frame(anova(E.mod)), digits = 2) %>% mutate("Model Name" = "E")
E.mod.Sum[2,6] <- "<0.01"
E.mod.Sum[3,6] <- "<0.01"
###
# Final DF merge
###
Table2 <- rbind(Tb.mod.sum, db.anova.sum, de.anova.sum, E.mod.Sum)
Table2  <-  Table2[,c(7,1,2,3,4,5,6)]
Table2 <- Table2 %>% mutate_if(is.numeric, ~round(., 3))
# Table1 Final table
Tbl.2 <-flextable(Table2) %>%
hline(i=c(3, 6, 9, 12), j = 1:7, part="body") %>%
merge_v(j = "Model Name") %>%
autofit(part = "all") %>%
bold(bold = TRUE, i = c(2, 3, 5, 6, 7, 8, 9, 11, 12)) %>%
bold(bold = FALSE, j = 1) %>%
align(align ="center", part = "all") %>%
font(part = "all", fontname = "Times New Roman") %>%
fix_border_issues()
Tbl.2
###
# Final DF merge
###
Table2 <- rbind(Tb.mod.sum, db.anova.sum, de.anova.sum, E.mod.Sum)
Table2
Table2  <-  Table2[,c(8,1,2,3,4,5,6,7)]
Table2  <-  Table2[,c(7,1,2,3,4,5,6)]
Table2
Table2 <- Table2 %>% mutate_if(is.numeric, ~round(., 3))
Table2
Table2 <- Table2 %>% mutate_if(is.numeric, ~round(., 3)) %>% as.data.frame()
Table2
str(Table2)
Tbl.2 <-flextable(Table2) %>%
hline(i=c(3, 6, 9, 12), j = 1:7, part="body") %>%
merge_v(j = "Model Name"
Tbl.2
Tbl.2 <-flextable(Table2) %>%
hline(i=c(3, 6, 9, 12), j = 1:7, part="body") %>%
merge_v(j = "Model Name")
Tbl.2
Table2
Table2 <- Table2 %>% mutate_if(is.numeric, ~round(., 3)) %>% as.data.frame() %>% mutate(Effects = "")
Table2
Table2[8,1] <- "<0.01"
Table2
Table2[1,8] <- "<0.01"
Table2
###
# Final DF merge
###
Table2 <- rbind(Tb.mod.sum, db.anova.sum, de.anova.sum, E.mod.Sum)
Table2  <-  Table2[,c(7,1,2,3,4,5,6)]
Table2[1,8] <- "Sex"
Table2[2,8] <- "Season"
Table2[3,8] <- "Season x Sex"
Table2[4,8] <- "Sex"
Table2[5,8] <- "Season"
Table2[6,8] <- "Season x Sex"
Table2[7,8] <- "Sex"
Table2[8,8] <- "Season"
Table2[9,8] <- "Season x Sex"
Table2
Table2 <- rbind(Tb.mod.sum, db.anova.sum, de.anova.sum, E.mod.Sum)
Table2 <- Table2 %>% mutate_if(is.numeric, ~round(., 3)) %>% as.data.frame() %>% mutate(Effects = "")
Table2[1,8] <- "Sex"
Table2[2,8] <- "Season"
Table2[3,8] <- "Season x Sex"
Table2[4,8] <- "Sex"
Table2[5,8] <- "Season"
Table2[6,8] <- "Season x Sex"
Table2[7,8] <- "Sex"
Table2[8,8] <- "Season"
Table2[9,8] <- "Season x Sex"
Table2[10,8] <- "Sex"
Table2[11,8] <- "Season"
Table2[12,8] <- "Season x Sex"
Table2
Table2  <-  Table2[,c(7,8,1,2,3,4,5,6)]
Table2
Tbl.2 <-flextable(Table2) %>%
hline(i=c(3, 6, 9, 12), j = 1:7, part="body") %>%
merge_v(j = "Model Name") %>%
autofit(part = "all") %>%
bold(bold = TRUE, i = c(2, 3, 5, 6, 7, 8, 9, 11, 12)) %>%
bold(bold = FALSE, j = 1) %>%
align(align ="center", part = "all") %>%
font(part = "all", fontname = "Times New Roman") %>%
fix_border_issues()
Tbl.2
Tbl.2 <-flextable(Table2) %>%
hline(i=c(3, 6, 9, 12), j = 1:8, part="body") %>%
merge_v(j = "Model Name") %>%
autofit(part = "all") %>%
bold(bold = TRUE, i = c(2, 3, 5, 6, 7, 8, 9, 11, 12)) %>%
bold(bold = FALSE, j = 1) %>%
align(align ="center", part = "all") %>%
font(part = "all", fontname = "Times New Roman") %>%
fix_border_issues()
Tbl.2
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
options(digits = 2)
rm(list=ls())
sessionInfo()
# Packages
pacman::p_load("dplyr", "tidyverse", "lubridate", "ggplot2", "plotly", "pbapply","car", "readr", "lmerTest", "emmeans", "AICcmodavg", "nls.multstart", "broom", "purrr", "plotrix", "AICcmodavg", "MuMIn", "stargazer", "jtools", "huxtable", "officer", "grid", "png", "ggimage", "nls.multstart", "ggrepel", "mgcv", "gratia", "gammit", "lubridate", "lmerTest","performance", "kableExtra","flextable")
#############
setwd("~/Dropbox/RWorkingDirectory/TPC_Survival/R")
##### TPC data
data.gam <- readRDS(file = "Final.Analysis/Final.Figure.data/data.temp.gam.analysis.rds")
Season.Sex.Interaction.Povi <- readRDS(file = "Models/Season.Sex.Interaction.Povi.rds")
data.gam$fit <- predict(Season.Sex.Interaction.Povi, type = "response")
data.gam$se <- predict(Season.Sex.Interaction.Povi, type = "se")
# set up data
data.gam$Season <- factor(data.gam$Season, c("Spring", "Summer", "Autumn", "Winter"))
data.gam$Sex <- factor(data.gam$Sex, c("ZWf", "ZZm"))
data.gam$Sex <- gsub("ZWf", "Female", data.gam$Sex)
data.gam$Sex <- gsub("ZZm", "Male", data.gam$Sex)
data.gam <- data.gam %>% group_by(Season, Sex)
data.gam$temp <- as.factor(data.gam$temp)
# summary for figure
data.gam.fig <- data.gam %>% group_by(Season, Sex, temp, POVI) %>%
summarise(Tb = mean(Tb),
percent95.ms2 = mean(percent95.ms2, na.rm = TRUE))
data.gam.fig$temp <- as.numeric(data.gam.fig$temp)
####### Summer
Spring <- data.gam.fig %>% filter(Season == "Spring")
Spring.plot <- ggplot(Spring, aes(x=temp, y=percent95.ms2, color=Sex))+
geom_point(aes(shape=Sex, color=Sex), size=2)+
scale_shape_manual(values=c(17, 21))+
scale_color_manual(values=c("#999999", "grey11")) +
ylab(bquote("95th"~"percentile"~"of"~"acceleration ms"^-2)) +
xlab(expression(T[b~Predict]))+
coord_cartesian(xlim =c(5, 50), ylim = c(0, 1.8))+
scale_x_continuous(breaks=seq(0,50,5))+
scale_y_continuous(breaks = seq(0, 1.8, .2))+
geom_smooth(method = "gam")+
theme_bw()+
ggtitle("Spring")+
theme(legend.position="none",
plot.title = element_text(size=14, face="bold", hjust = 0.5))
####### Summer
Summer <- data.gam.fig %>% filter(Season == "Summer")
Summer.plot <- ggplot(Summer, aes(x=temp, y=percent95.ms2, color=Sex))+
geom_point(aes(shape=Sex, color=Sex), size=2)+
scale_shape_manual(values=c(17, 21))+
scale_color_manual(values=c("#999999", "grey11")) +
xlab(expression(T[b~Predict]))+
coord_cartesian(xlim =c(5, 50), ylim = c(0, 1.8))+
scale_x_continuous(breaks=seq(0,50,5))+
scale_y_continuous(breaks = seq(0, 1.8, .2))+
geom_smooth(method = "gam")+
theme_bw()+
ggtitle("Summer") +
theme(legend.position="none",
axis.title.y = element_blank(),
plot.title = element_text(size=14, face="bold", hjust = 0.5))
####### Autumn
Autumn <- data.gam.fig %>% filter(Season == "Autumn")
Autumn.plot <- ggplot(Autumn, aes(x=temp, y=percent95.ms2, color=Sex))+
geom_point(aes(shape=Sex, color=Sex), size=2)+
scale_shape_manual(values=c(17, 21))+
scale_color_manual(values=c("#999999", "grey11")) +
xlab(expression(T[b~Predict])) +
coord_cartesian(xlim =c(5, 50), ylim = c(0, 1.8))+
scale_x_continuous(breaks=seq(0,50,5))+
scale_y_continuous(breaks = seq(0, 1.8, .2))+
geom_smooth(method = "gam")+
theme_bw()+
ggtitle("Autumn") +
theme(legend.position="none",
axis.title.y = element_blank(),
plot.title = element_text(size=14, face="bold", hjust = 0.5))
####### Winter
Winter <- data.gam.fig %>% filter(Season == "Winter")
Winter.plot <- ggplot(Winter, aes(x=temp, y=percent95.ms2, color=Sex))+
geom_point(aes(shape=Sex, color=Sex), size=2)+
scale_shape_manual(values=c(17, 21))+
scale_color_manual(values=c("#999999", "grey11")) +
xlab(expression(T[b~Predict])) +
coord_cartesian(xlim =c(5, 50), ylim = c(0, 1.8))+
scale_x_continuous(breaks=seq(0,50,5))+
scale_y_continuous(breaks = seq(0, 1.8, .2))+
geom_smooth(method = "gam")+
theme_bw()+
ggtitle("Winter") +
theme(axis.title.y = element_blank(),
legend.position = c(.80, .80),
plot.title = element_text(size=12, face="bold", hjust = 0.5))
# final plot
p<- cowplot::plot_grid(Spring.plot, Summer.plot, Autumn.plot, Winter.plot, ncol=4)
p
#############
setwd("~/Dropbox/RWorkingDirectory/TPC_Survival/R")
##### TPC data
data.gam <- readRDS(file = "Final.Analysis/Final.Figure.data/data.temp.gam.analysis.rds")
Season.Sex.Interaction.Povi <- readRDS(file = "Models/Season.Sex.Interaction.Povi.rds")
data.gam$fit <- predict(Season.Sex.Interaction.Povi, type = "response")
data.gam$se <- predict(Season.Sex.Interaction.Povi, type = "se")
# set up data
data.gam$Season <- factor(data.gam$Season, c("Spring", "Summer", "Autumn", "Winter"))
data.gam$Sex <- factor(data.gam$Sex, c("ZWf", "ZZm"))
data.gam$Sex <- gsub("ZWf", "Female", data.gam$Sex)
data.gam$Sex <- gsub("ZZm", "Male", data.gam$Sex)
data.gam <- data.gam %>% group_by(Season, Sex)
data.gam$temp <- as.factor(data.gam$temp)
# summary for figure
data.gam.fig <- data.gam %>% group_by(Season, Sex, temp, POVI) %>%
summarise(Tb = mean(Tb),
percent95.ms2 = mean(fit, na.rm = TRUE))
data.gam.fig$temp <- as.numeric(data.gam.fig$temp)
####### Summer
Spring <- data.gam.fig %>% filter(Season == "Spring")
Spring.plot <- ggplot(Spring, aes(x=temp, y=percent95.ms2, color=Sex))+
geom_point(aes(shape=Sex, color=Sex), size=2)+
scale_shape_manual(values=c(17, 21))+
scale_color_manual(values=c("#999999", "grey11")) +
ylab(bquote("95th"~"percentile"~"of"~"acceleration ms"^-2)) +
xlab(expression(T[b~Predict]))+
coord_cartesian(xlim =c(5, 50), ylim = c(0, 1.8))+
scale_x_continuous(breaks=seq(0,50,5))+
scale_y_continuous(breaks = seq(0, 1.8, .2))+
geom_smooth(method = "gam")+
theme_bw()+
ggtitle("Spring")+
theme(legend.position="none",
plot.title = element_text(size=14, face="bold", hjust = 0.5))
####### Summer
Summer <- data.gam.fig %>% filter(Season == "Summer")
Summer.plot <- ggplot(Summer, aes(x=temp, y=percent95.ms2, color=Sex))+
geom_point(aes(shape=Sex, color=Sex), size=2)+
scale_shape_manual(values=c(17, 21))+
scale_color_manual(values=c("#999999", "grey11")) +
xlab(expression(T[b~Predict]))+
coord_cartesian(xlim =c(5, 50), ylim = c(0, 1.8))+
scale_x_continuous(breaks=seq(0,50,5))+
scale_y_continuous(breaks = seq(0, 1.8, .2))+
geom_smooth(method = "gam")+
theme_bw()+
ggtitle("Summer") +
theme(legend.position="none",
axis.title.y = element_blank(),
plot.title = element_text(size=14, face="bold", hjust = 0.5))
####### Autumn
Autumn <- data.gam.fig %>% filter(Season == "Autumn")
Autumn.plot <- ggplot(Autumn, aes(x=temp, y=percent95.ms2, color=Sex))+
geom_point(aes(shape=Sex, color=Sex), size=2)+
scale_shape_manual(values=c(17, 21))+
scale_color_manual(values=c("#999999", "grey11")) +
xlab(expression(T[b~Predict])) +
coord_cartesian(xlim =c(5, 50), ylim = c(0, 1.8))+
scale_x_continuous(breaks=seq(0,50,5))+
scale_y_continuous(breaks = seq(0, 1.8, .2))+
geom_smooth(method = "gam")+
theme_bw()+
ggtitle("Autumn") +
theme(legend.position="none",
axis.title.y = element_blank(),
plot.title = element_text(size=14, face="bold", hjust = 0.5))
####### Winter
Winter <- data.gam.fig %>% filter(Season == "Winter")
Winter.plot <- ggplot(Winter, aes(x=temp, y=percent95.ms2, color=Sex))+
geom_point(aes(shape=Sex, color=Sex), size=2)+
scale_shape_manual(values=c(17, 21))+
scale_color_manual(values=c("#999999", "grey11")) +
xlab(expression(T[b~Predict])) +
coord_cartesian(xlim =c(5, 50), ylim = c(0, 1.8))+
scale_x_continuous(breaks=seq(0,50,5))+
scale_y_continuous(breaks = seq(0, 1.8, .2))+
geom_smooth(method = "gam")+
theme_bw()+
ggtitle("Winter") +
theme(axis.title.y = element_blank(),
legend.position = c(.80, .80),
plot.title = element_text(size=12, face="bold", hjust = 0.5))
# final plot
p<- cowplot::plot_grid(Spring.plot, Summer.plot, Autumn.plot, Winter.plot, ncol=4)
p
setwd("~/Dropbox/RWorkingDirectory/TPC_Survival/R")
Reg.dat <- read.csv(file = "Final.Analysis/Final.Figure.data/MARK.E.index.regression.csv")
######
### survival regression for best fit
Fig6.Mark <- ggplot(data=Reg.dat, aes(x=E, y=X1.S, ymin=X1.S-SE , ymax=X1.S+SE)) +
geom_line() +
geom_ribbon(alpha=0.5) +
xlim(0.25, 1)+
ylim(.4, 1)+
xlab("Avg Mins Moved") +
ylab("Survival Estimate")+
scale_y_continuous(breaks=c(0.5, 0.6, 0.7, 0.8, 0.9, 1.0))+
scale_x_continuous(breaks=c(0.3,0.4,0.5, 0.6, 0.7, 0.8, 0.9, 1.0))+
coord_cartesian(xlim =c(0.2855, .96), ylim = c(.5, 0.9))+
labs(x = "E index", y = "Survivorship (%)") +
theme_bw()+
theme(plot.title = element_text(size=12, face="bold", hjust = 0.5))
Fig6.Mark
